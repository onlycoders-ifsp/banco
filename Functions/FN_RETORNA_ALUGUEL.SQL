CREATE OR REPLACE FUNCTION FN_RETORNA_ALUGUEL(P_ID_LOCADOR TEXT, P_ID_LOCATARIO TEXT, P_ID_ALUGUEL TEXT, P_ID_PRODUTO TEXT)
RETURNS SETOF RECORD AS $$
--DECLARE DADOS JSON;
BEGIN

	IF P_ID_LOCADOR = '0' THEN
		P_ID_LOCADOR := NULL;
	END IF;
	
	IF P_ID_LOCATARIO = '0' THEN
		P_ID_LOCATARIO := NULL;
	END IF;
	
	IF P_ID_ALUGUEL = '0' THEN
		P_ID_ALUGUEL := NULL;
	END IF;
	
	IF P_ID_PRODUTO = '0' THEN
		P_ID_PRODUTO := NULL;
	END IF;
	
	RETURN QUERY 
		SELECT
		CAST(A.ID_ALUGUEL AS TEXT),
		CAST(A.ID_PRODUTO AS TEXT),
		CAST(A.ID_USUARIO AS TEXT) ID_LOCATARIO,
		CAST(P.ID_USUARIO AS TEXT) ID_LOCADOR,
		TO_CHAR(A.DATA_INICIO,'YYYY-MM-DD'),
		TO_CHAR(A.DATA_FIM,'YYYY-MM-DD'),
		CAST(A.VALOR_ALUGUEL AS DOUBLE PRECISION),
		TO_CHAR(A.DATA_SAQUE,'YYYY-MM-DD')
		FROM ALUGUEIS A
		
		INNER JOIN PRODUTOS P
		ON P.ID_PRODUTO = A.ID_PRODUTO
		
		WHERE (A.ID_ALUGUEL = UUID(P_ID_ALUGUEL)
		OR (P.ID_USUARIO = UUID(P_ID_LOCADOR))
		OR (A.ID_USUARIO = UUID(P_ID_LOCATARIO))
		OR (A.ID_PRODUTO = UUID(P_ID_PRODUTO))
		OR (P_ID_ALUGUEL IS NULL AND P_ID_LOCADOR IS NULL AND P_ID_PRODUTO IS NULL));
	
	EXCEPTION WHEN OTHERS THEN
		PERFORM FN_REPORT_ERRO('ERRO AO SELECIONAR ALUGUEL', SQLSTATE, SQLERRM, 'FN_RETORNA_ALUGUEL', 'ALUGUEIS', CURRENT_QUERY());
END;
$$ LANGUAGE PLPGSQL;