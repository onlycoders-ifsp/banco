CREATE OR REPLACE FUNCTION FN_RETORNA_PRODUTO(P_ID_USUARIO TEXT DEFAULT NULL, P_ID_PRODUTO TEXT DEFAULT NULL)
RETURNS SETOF RECORD AS $$
--DECLARE DADOS JSON;
BEGIN
	 
	IF P_ID_USUARIO = '0' THEN 
		P_ID_USUARIO = NULL;
	END IF;
	
	IF P_ID_PRODUTO = '0' THEN 
		P_ID_PRODUTO = NULL;
	END IF;
	
	RETURN QUERY 
		SELECT 
		CAST(U.ID_USUARIO AS TEXT),
		CAST(P.ID_PRODUTO AS TEXT),
		CAST(P.NOME AS TEXT),
		CAST(P.DESCRICAO_CURTA AS TEXT),
		CAST(P.DESCRICAO AS TEXT),
		CAST(P.VALOR_BASE_DIARIA AS DECIMAL(16,2)),
		CAST(P.VALOR_BASE_MENSAL AS DECIMAL(16,2)), 
		CAST(P.VALOR_PRODUTO AS DECIMAL(16,2)),
		TO_CHAR(P.DATA_COMPRA,'YYYY-MM-DD'),
		CAST(CASE 
			WHEN AA.QtdAlugueis IS NULL THEN 0 
			ELSE AA.QtdAlugueis
		END AS NUMERIC(16)),
		CAST(CASE
			WHEN AA.TotalGanhos IS NULL THEN 0
			ELSE AA.TotalGanhos
		END AS DECIMAL(16,2)),
		CAST (CASE
			WHEN AV.MEDIAAVALIACAO IS NULL THEN 0
			ELSE AV.MEDIAAVALIACAO
		END AS DECIMAL(6,1)),
		CAST(CAPA_FOTO AS TEXT),
		P.ATIVO
		--TO_CHAR(P.DATA_INLUSAO,'YYYY-MM-DD')
		FROM PRODUTOS P
		INNER JOIN USUARIOS U
		ON P.ID_USUARIO = U.ID_USUARIO
		LEFT JOIN (SELECT A.ID_PRODUTO, COUNT(1) QtdAlugueis, SUM(A.VALOR_DEBITO) TotalGanhos
						FROM ALUGUEIS A
						GROUP BY A.ID_PRODUTO) AA
		ON AA.ID_PRODUTO = P.ID_PRODUTO
		LEFT JOIN (SELECT ID_PRODUTO, (SUM(NOTA)/(COUNT(1))) MEDIAAVALIACAO 
					FROM AVALIACOES
					GROUP BY ID_PRODUTO) AV
		ON AV.ID_PRODUTO = P.ID_PRODUTO
		WHERE (U.ID_USUARIO = UUID(P_ID_USUARIO) AND P.ID_PRODUTO = UUID(P_ID_PRODUTO)
			   OR (P_ID_USUARIO IS NULL AND P.ID_PRODUTO = UUID(P_ID_PRODUTO))
			   OR (P_ID_PRODUTO IS NULL AND U.ID_USUARIO = UUID(P_ID_USUARIO))
			   OR (P_ID_PRODUTO IS NULL AND P_ID_USUARIO IS NULL));
		--AND NOT P.ISDELETADO;
		/*
		select
		json_build_object(
			'id_usuario', p.id_usuario,
			'produto', json_build_object(
				'id_produto', p.id_produto,
				'nome', p.nome,
				'descricao', p.descricao,
				'base_diaria', p.valor_base_diaria,
				'base_mensal', p.valor_base_mensal,
				'valor_produto', p.valor_produto,
				'data_compra', p.data_compra,
				'ativo', p.ativo
			)
		)
		FROM PRODUTOS P
		WHERE ((P.ID_USUARIO = UUID(P_ID_USUARIO) OR P_ID_USUARIO IS NULL) AND P_ID_PRODUTO IS NULL)
		OR ((P.ID_PRODUTO = UUID(P_ID_PRODUTO) OR P_ID_PRODUTO IS NULL) AND P_ID_USUARIO IS NULL);
*/
	EXCEPTION WHEN OTHERS THEN
		--DADOS := (SELECT ROW_TO_JSON(a) FROM (SELECT P_ID_USUARIO) A);
		PERFORM FN_REPORT_ERRO('ERRO AO SELECIONAR PRODUTO', SQLSTATE, SQLERRM, 'FN_RETORNA_PRODUTO', 'PRODUTOS/USUARIOS', CURRENT_QUERY());

END;
$$ LANGUAGE PLPGSQL;

/* SEM PARAMENTRO RETORNA TUDO
SELECT *FROM FN_RETORNAR_PRODUTO() -- OU SELECT *FROM FN_RETORNAR_PRODUTO('fc638b3d-cdec-4a94-9177-2d583effec33')
			AS T(NOME_USUARIO TEXT, ID_PRODUTO TEXT, NOME_PRODUTO TEXT, DESCRICAO TEXT, BASE_DIARIA DECIMAL(16,2), 
				 BASE_MENSAL DECIMAL(16,2), VALOR_PRODUTO DECIMAL(16,2), DATA_COMPRA TEXT, DATA_INLUSAO TEXT);
*/